No. 2	identifier_list =>  id 
No. 3	identifier_list =>  identifier_list  ,  id 
No. 3	identifier_list =>  identifier_list  ,  id 
No. 2	identifier_list =>  id 
No. 3	identifier_list =>  identifier_list  ,  id 
No. 10	standard_type =>  integer 
No. 8	type =>  standard_type 
No. 7	declaration =>  identifier_list  :  type 
No. 2	identifier_list =>  id 
No. 11	standard_type =>  real 
No. 8	type =>  standard_type 
No. 6	declaration =>  declaration  ;  identifier_list  :  type 
No. 4	declarations =>  var  declaration  ; 
No. 13	subprogram_declarations => 
No. 44	factor =>  id 
No. 42	term =>  factor 
No. 39	simple_expression =>  term 
No. 55	relop =>  = 
No. 61	num =>  int_num 
No. 46	factor =>  num 
No. 42	term =>  factor 
No. 39	simple_expression =>  term 
No. 38	expression =>  simple_expression  relop  simple_expression 
No. 31	variable =>  id 
No. 44	factor =>  id 
No. 42	term =>  factor 
No. 39	simple_expression =>  term 
No. 51	addop =>  + 
No. 44	factor =>  id 
No. 42	term =>  factor 
No. 53	mulop =>  * 
No. 44	factor =>  id 
No. 43	term =>  term  mulop  factor 
No. 54	mulop =>  div 
No. 44	factor =>  id 
No. 43	term =>  term  mulop  factor 
No. 41	simple_expression =>  simple_expression  addop  term 
No. 37	expression =>  simple_expression 
No. 26	statement =>  variable  :=  expression 
No. 31	variable =>  id 
No. 44	factor =>  id 
No. 42	term =>  factor 
No. 54	mulop =>  div 
No. 44	factor =>  id 
No. 43	term =>  term  mulop  factor 
No. 39	simple_expression =>  term 
No. 37	expression =>  simple_expression 
No. 26	statement =>  variable  :=  expression 
No. 29	statement =>  if  expression  then  statement  else  statement 
No. 24	statement_list =>  statement 
No. 22	optional_statements =>  statement_list 
No. 21	compound_statement =>  begin  optional_statements  end 
No. 1	program =>  program  id  (  identifier_list  )  ;  declarations  subprogram_declarations  compound_statement  . 
