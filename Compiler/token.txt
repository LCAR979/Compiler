(24, Program)
(65, HelloWorld)
(58, ()
(65, output)
(59, ))
(51, ;)
(32, var)
(65, a)
(50, :)
(65, real)
(51, ;)
(2, begin)
(65, a)
(64, :=)
(67, 0.1235)
(51, ;)
(65, a)
(38, +=)
(66, 3)
(51, ;)
(65, writeln)
(58, ()
(65, a)
(59, ))
(51, ;)
(65, writeln)
(58, ()
(68, 'Hello, world!')
(59, ))
(51, ;)
(9, end)
(56, .)
(24, program)
(65, ex4_5)
(51, ;)
(32, var)
(65, t)
(49, ,)
(65, s)
(50, :)
(65, real)
(51, ;)
(65, i)
(49, ,)
(65, j)
(49, ,)
(65, n)
(50, :)
(65, integer)
(51, ;)
(2, begin)
(65, S)
(64, :=)
(66, 0)
(51, ;)
(11, for)
(65, n)
(64, :=)
(66, 1)
(29, to)
(66, 10)
(6, do)
(2, begin)
(65, t)
(64, :=)
(66, 1)
(51, ;)
(11, for)
(65, j)
(64, :=)
(66, 1)
(29, to)
(65, n)
(6, do)
(65, t)
(64, :=)
(65, t)
(37, *)
(65, j)
(51, ;)
(65, S)
(64, :=)
(65, S)
(35, +)
(65, t)
(51, ;)
(9, end)
(51, ;)
(65, writeln)
(58, ()
(68, 's=')
(49, ,)
(65, s)
(50, :)
(66, 0)
(50, :)
(66, 0)
(59, ))
(51, ;)
(9, end)
(56, .)
(24, Program)
(65, HelloWorld)
(58, ()
(65, output)
(59, ))
(51, ;)
(32, var)
(65, a)
(50, :)
(65, real)
(51, ;)
(2, begin)
(65, a)
(64, :=)
(67, 0.1235)
(51, ;)
(65, a)
(38, +=)
(66, 3)
(51, ;)
(65, writeln)
(58, ()
(65, a)
(59, ))
(51, ;)
(65, writeln)
(58, ()
(68, 'Hello, world!')
(59, ))
(51, ;)
(9, end)
(56, .)
(24, program)
(65, ex4_5)
(51, ;)
(32, var)
(65, t)
(49, ,)
(65, s)
(50, :)
(65, real)
(51, ;)
(65, i)
(49, ,)
(65, j)
(49, ,)
(65, n)
(50, :)
(65, integer)
(51, ;)
(2, begin)
(65, S)
(64, :=)
(66, 0)
(51, ;)
(11, for)
(65, n)
(64, :=)
(66, 1)
(29, to)
(66, 10)
(6, do)
(2, begin)
(65, t)
(64, :=)
(66, 1)
(51, ;)
(11, for)
(65, j)
(64, :=)
(66, 1)
(29, to)
(65, n)
(6, do)
(65, t)
(64, :=)
(65, t)
(37, *)
(65, j)
(51, ;)
(65, S)
(64, :=)
(65, S)
(35, +)
(65, t)
(51, ;)
(9, end)
(51, ;)
(65, writeln)
(58, ()
(68, 's=')
(49, ,)
(65, s)
(50, :)
(66, 0)
(50, :)
(66, 0)
(59, ))
(51, ;)
(9, end)
(56, .)
(24, Program)
(65, HelloWorld)
(58, ()
(65, output)
(59, ))
(51, ;)
(32, var)
(65, a)
(50, :)
(65, real)
(51, ;)
(2, begin)
(65, a)
(64, :=)
(67, 0.1235)
(51, ;)
(65, a)
(38, +=)
(66, 3)
(51, ;)
(65, writeln)
(58, ()
(65, a)
(59, ))
(51, ;)
(65, writeln)
(58, ()
(68, 'Hello, world!')
(59, ))
(51, ;)
(9, end)
(56, .)
(24, program)
(65, ex4_5)
(51, ;)
(32, var)
(65, t)
(49, ,)
(65, s)
(50, :)
(65, real)
(51, ;)
(65, i)
(49, ,)
(65, j)
(49, ,)
(65, n)
(50, :)
(65, integer)
(51, ;)
(2, begin)
(65, S)
(64, :=)
(66, 0)
(51, ;)
(11, for)
(65, n)
(64, :=)
(66, 1)
(29, to)
(66, 10)
(6, do)
(2, begin)
(65, t)
(64, :=)
(66, 1)
(51, ;)
(11, for)
(65, j)
(64, :=)
(66, 1)
(29, to)
(65, n)
(6, do)
(65, t)
(64, :=)
(65, t)
(37, *)
(65, j)
(51, ;)
(65, S)
(64, :=)
(65, S)
(35, +)
(65, t)
(51, ;)
(9, end)
(51, ;)
(65, writeln)
(58, ()
(68, 's=')
(49, ,)
(65, s)
(50, :)
(66, 0)
(50, :)
(66, 0)
(59, ))
(51, ;)
(9, end)
(56, .)
(24, Program)
(65, HelloWorld)
(58, ()
(65, output)
(59, ))
(51, ;)
(32, var)
(65, a)
(50, :)
(65, real)
(51, ;)
(2, begin)
(65, a)
(64, :=)
(67, 0.1235)
(51, ;)
(65, a)
(38, +=)
(66, 3)
(51, ;)
(65, writeln)
(58, ()
(65, a)
(59, ))
(51, ;)
(65, writeln)
(58, ()
(68, 'Hello, world!')
(59, ))
(51, ;)
(9, end)
(56, .)
(24, program)
(65, ex4_5)
(51, ;)
(32, var)
(65, t)
(49, ,)
(65, s)
(50, :)
(65, real)
(51, ;)
(65, i)
(49, ,)
(65, j)
(49, ,)
(65, n)
(50, :)
(65, integer)
(51, ;)
(2, begin)
(65, S)
(64, :=)
(66, 0)
(51, ;)
(11, for)
(65, n)
(64, :=)
(66, 1)
(29, to)
(66, 10)
(6, do)
(2, begin)
(65, t)
(64, :=)
(66, 1)
(51, ;)
(11, for)
(65, j)
(64, :=)
(66, 1)
(29, to)
(65, n)
(6, do)
(65, t)
(64, :=)
(65, t)
(37, *)
(65, j)
(51, ;)
(65, S)
(64, :=)
(65, S)
(35, +)
(65, t)
(51, ;)
(9, end)
(51, ;)
(65, writeln)
(58, ()
(68, 's=')
(49, ,)
(65, s)
(50, :)
(66, 0)
(50, :)
(66, 0)
(59, ))
(51, ;)
(9, end)
(56, .)
(24, Program)
(65, HelloWorld)
(58, ()
(65, output)
(59, ))
(51, ;)
(32, var)
(65, a)
(50, :)
(65, real)
(51, ;)
(2, begin)
(65, a)
(64, :=)
(67, 0.1235)
(51, ;)
(65, a)
(38, +=)
(66, 3)
(51, ;)
(65, writeln)
(58, ()
(65, a)
(59, ))
(51, ;)
(65, writeln)
(58, ()
(68, 'Hello, world!')
(59, ))
(51, ;)
(9, end)
(56, .)
(24, program)
(65, ex4_5)
(51, ;)
(32, var)
(65, t)
(49, ,)
(65, s)
(50, :)
(65, real)
(51, ;)
(65, i)
(49, ,)
(65, j)
(49, ,)
(65, n)
(50, :)
(65, integer)
(51, ;)
(2, begin)
(65, S)
(64, :=)
(66, 0)
(51, ;)
(11, for)
(65, n)
(64, :=)
(66, 1)
(29, to)
(66, 10)
(6, do)
(2, begin)
(65, t)
(64, :=)
(66, 1)
(51, ;)
(11, for)
(65, j)
(64, :=)
(66, 1)
(29, to)
(65, n)
(6, do)
(65, t)
(64, :=)
(65, t)
(37, *)
(65, j)
(51, ;)
(65, S)
(64, :=)
(65, S)
(35, +)
(65, t)
(51, ;)
(9, end)
(51, ;)
(65, writeln)
(58, ()
(68, 's=')
(49, ,)
(65, s)
(50, :)
(66, 0)
(50, :)
(66, 0)
(59, ))
(51, ;)
(9, end)
(56, .)
(24, Program)
(65, HelloWorld)
(58, ()
(65, output)
(59, ))
(51, ;)
(32, var)
(65, a)
(50, :)
(65, real)
(51, ;)
(2, begin)
(65, a)
(64, :=)
(67, 0.1235)
(51, ;)
(65, a)
(38, +=)
(66, 3)
(51, ;)
(65, writeln)
(58, ()
(65, a)
(59, ))
(51, ;)
(65, writeln)
(58, ()
(68, 'Hello, world!')
(59, ))
(51, ;)
(9, end)
(56, .)
(24, program)
(65, ex4_5)
(51, ;)
(32, var)
(65, t)
(49, ,)
(65, s)
(50, :)
(65, real)
(51, ;)
(65, i)
(49, ,)
(65, j)
(49, ,)
(65, n)
(50, :)
(65, integer)
(51, ;)
(9, end)
(2, begin)
(65, S)
(64, :=)
(66, 0)
(51, ;)
(11, for)
(65, n)
(64, :=)
(66, 1)
(29, to)
(66, 10)
(6, do)
(2, begin)
(65, t)
(64, :=)
(66, 1)
(51, ;)
(11, for)
(65, j)
(64, :=)
(66, 1)
(29, to)
(65, n)
(6, do)
(65, t)
(64, :=)
(65, t)
(37, *)
(65, j)
(51, ;)
(65, S)
(64, :=)
(65, S)
(35, +)
(65, t)
(51, ;)
(9, end)
(51, ;)
(65, writeln)
(58, ()
(68, 's=')
(49, ,)
(65, s)
(50, :)
(66, 0)
(50, :)
(66, 0)
(59, ))
(51, ;)
(9, end)
(56, .)
(24, Program)
(65, HelloWorld)
(58, ()
(65, output)
(59, ))
(51, ;)
(32, var)
(65, a)
(50, :)
(65, real)
(51, ;)
(2, begin)
(65, a)
(64, :=)
(67, 0.1235)
(51, ;)
(65, a)
(38, +=)
(66, 3)
(51, ;)
(65, writeln)
(58, ()
(65, a)
(59, ))
(51, ;)
(65, writeln)
(58, ()
(68, 'Hello, world!')
(59, ))
(51, ;)
(9, end)
(56, .)
(24, program)
(65, ex4_5)
(51, ;)
(32, var)
(65, t)
(49, ,)
(65, s)
(50, :)
(65, real)
(51, ;)
(65, i)
(49, ,)
(65, j)
(49, ,)
(65, n)
(50, :)
(65, integer)
(51, ;)
(2, begin)
(65, S)
(64, :=)
(66, 0)
(51, ;)
(11, for)
(65, n)
(64, :=)
(66, 1)
(29, to)
(66, 10)
(6, do)
(2, begin)
(65, t)
(64, :=)
(66, 1)
(51, ;)
(11, for)
(65, j)
(64, :=)
(66, 1)
(29, to)
(65, n)
(6, do)
(65, t)
(64, :=)
(65, t)
(37, *)
(65, j)
(51, ;)
(65, S)
(64, :=)
(65, S)
(35, +)
(65, t)
(51, ;)
(9, end)
(51, ;)
(65, writeln)
(58, ()
(68, 's=')
(49, ,)
(65, s)
(50, :)
(66, 0)
(50, :)
(66, 0)
(59, ))
(51, ;)
(9, end)
(56, .)
