extern void start_program(Item* it);
extern void program(Item* it);
extern void identifier_list_id(Item* it);
extern void identifier_list_list_id(Item* it);
extern void declarations(Item* it);
extern void declarations_null(Item* it);
extern void declaration_declaration_identifier(Item* it);
extern void declaration_identifier(Item* it);
extern void type_standard(Item* it);
extern void type_array(Item* it);
extern void standard_type_int(Item* it);
extern void standard_type_real(Item* it);
extern void subprogram_declarations_sub_declarations(Item* it);
extern void subprogram_declarations_null(Item* it);
extern void subprogram_declaration_head_dec_compound(Item* it);
extern void subprogram_head_function(Item* it);
extern void subprogram_head_procedure(Item* it);
extern void arguments_param_list(Item* it);
extern void arguments_null(Item* it);
extern void parma_list_id_list(Item* it);
extern void parma_list_parma_list_id(Item* it);
extern void compound_statement(Item* it);
extern void optional_statements_st_list(Item* it);
extern void optional_statements_null(Item* it);
extern void statement_list_statement(Item* it);
extern void statement_list_st_list_statement(Item* it);
extern void statement_var_assign(Item* it);
extern void statement_procedure_st(Item* it);
extern void statement_compound_st(Item* it);
extern void statement_if_then(Item* it);
extern void statement_if_then_else(Item* it);
extern void N_if(Item* it);
extern void M_quad(Item* it);
extern void statement_while(Item* it);
extern void statement_for(Item* it);
extern void M_for(Item* it);
extern void bool_exp_or(Item* it);
extern void bool_exp_and(Item* it);
extern void bool_exp_not(Item* it);
extern void bool_exp_parentheses(Item* it);
extern void bool_exp_boolexpitem(Item* it);
extern void bool_exp_relop(Item* it);
extern void bool_exp_true(Item* it);
extern void bool_exp_false(Item* it);
extern void var_id(Item* it);
extern void var_array_element(Item* it);
extern void procedure_st_func_call_no_param(Item* it);
extern void procedure_st_func_call_param(Item* it);
extern void expressionlist_expitem(Item* it);
extern void expressionlist_expression_list(Item* it);
extern void expitem_term(Item* it);
extern void expitem_signterm(Item* it);
extern void expitem_addop(Item* it);
extern void term_factor(Item* it);
extern void term_mulop(Item* it);
extern void factor_id(Item* it);
extern void factor_func_call_param(Item* it);
extern void factor_num(Item* it);
extern void factor_exp_item(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void pass_op(Item* it);
extern void num_int(Item* it);
extern void num_real(Item* it);
extern void M_function(Item* it);
extern void M_procedure(Item* it);
extern void statement_repeat(Item* it);
extern void N_repeat(Item* it);
extern void N_program(Item* it);
